 === Comandos Unix ===
 Link github: https://gist.github.com/luizomf/6a57d2c7f93624ea92fe1c3bc8f7243b


 Para utilizar no MAC, só executar o terminal
 ------------------------------------------------------------

 Para utilizar no Windows, é preciso utilizar o wsl2 e
 instalar uma versão linux para acompanhar.

 video: https://youtu.be/05YN8F8ajBc e depois
 configure seu terminal com ZSH:
 Video: https://youtu.be/y-w-gamp4U0

-------------------------------------------------------------

sudo: Ele pede uma senha para poder elevar
os privilegios do usuário.

=== Navegação ===

pwd: Mostra o caminho do diretorio atual.

ls: Lista tudo que está no diretorio atual.

ls -l: Lista o que está dentro do diretorio de uma forma
mais longa, propriedade das pastas.

ls -a: Lista os arquivos Ocultos também.

ls -h: Mostra o tamanho do arquivos/diretorio. Podendo
utilizar os comandos agregados também.

Exemplo: ls -lah

Posso utilizar o comando 
ls -l que lista tudo, adicionando o pipe | grep nomedoarquivo,
ele me trás somente o arquivo selecionado.
Ou seja.. ele primeiro lista tudo que tem dentro do diretorio,
adiciona dentro do grep que funcionaria como se fosse um filtro
e ai sim ele me mostra o que eu quero, que no caso é o nomedoarquivo
ou diretorio.

cd - Change Directory: utilizado para ir para outra pasta/Diretorio.
cd ..: eu volto para o diretorio anterior.



=== Outros comandos ===
whoami: Mostra o nome do seu usuário.

hostname: Mostra o nome da máquina.

uname: mostra dados sobre o sistema.

nano: utilizado para editar textos.
 a seta pra cima significa: (ctrl).

tree: mostra a arvore do diretorio atual.. 
tudo que tem dentro das pasta.

Tree -d -L 2: Mostra apenas a arvore dos diretorios e 2 pastas
subsequentes.


=== Para ler um arquivos ===

cat -n nomedoarquivo.txt: Faz a leitura do arquivos
com as quantidades de linha.

tail nomedoarquivo.txt: Faz a leitura do arquivos porém
com as ultimas linhas..

tail -f nomedoarquivo.txt: Bastante utilizado para
ler log, Pois ele continua aberto conforme for salvando
o arquivo ele já mostra as ultimas linhas automaticamente.
ctrl+c: você sai da leitura do arquivo com tail.

wc: Utilizado para ler linhas, caracteres e palavras.

wc -l: Ler linhas
wc -m: Ler caracteres
wc -w: Ler palavras


=== Manipulação de arquivos ===

Caminho relativo:
cp nomedoarquivo.txt Desktop/: Para copiar um arquivo
para outro local, eu eu utilizo o cp + nomedoarquivo e 
adiciono o caminho aonde quero a cópia.

Posso também realizar o caminha absoluto:
cp /users/Lucas/nomedoarquivo.txt /User/Lucas/Desktop/OutroNome.txt


mkdir: Este comando cria um diretorio.

mkdir -p Diretorio/Subpasta/Subpastadasubpasta/Outrapasta:
Utilizando o -p ele cria uma pasta dentro da outra.

mkdir -p Diretorio/Subpasta/Subpastadasubpasta/{pasta dentro da Subpastadasubpasta}
Colocando a pasta/{} você cria pasta dentro da pasta.

mv: Mover arquivo para outro diretorio e renomeia também.
Ele funciona do mesmo formato do cp.

mv nome-da-pasta NOVAPASTA: utilizando este comando eu renomeei 
a pasta.

cp -R novapasta Copiadenovapasta: para copiar um diretorio
é preciso coloar o -r para ele copiar a pasta e subpasta

rm: Apaga arquivo e diretorios.

Apagar um arquivo:
rm nomedoarquivo.txt

Apagar um diretorio:
rm -R nomedoDiretorio


=== Operadores Uteis ===

; Permite executar vários comandos de uma vez.

Exemplo:
mkdir -p Diretorio/Subpasta/Subpastadasubpasta/Outrapasta ; tree Diretorio


Utilizando o ; ele executa a linha de comandos sequentes mesmo
se um dos comandos apresentar o erro.

&&: permite executar vários comandos de uma vez, porém
se um dos comandos apresentar um erro ele para a execução.

||: Ele executa o proximo comando SE o comando anterior apresentar
erro.

> : Para jogar o resultado em um arquivo.. como se fosse um log.
Exemplo: ls > Saida-do-ls.txt

>>: Colocando dois >> ele adiciona no arquivo ja existente.

Exemplo: ls | grep ".mp4" >> saida-do-ls.txt



=== Background e Foreground ===

Como criar um processo em background.. Executar um comando em
backgroud.

Para adicionar um processo 
sleep 5000 &: o & que queria o processo.

jobs: lista os processos.

fg %2: trás o processo que está suspenso pois necessita 
que a tela esteja aberta.
ctrl + z para voltar ele para background.

Kill %2: eu Deleto o processo.

kill -tstp %1: Pausa o processo.
kill -CONT %1: Continua o processo.

kill -l: mostra todos os comandos que podem ser utilizados
com kill.

=== Outros Comandos ===

file + o nome do arquivo: eu mostro as informações
de que tipo de arquivo é esse.

history: mostra todos os comandos utilizados.

uname -a: Mostra os dados sobre o sistema.

ps aux: mostra os processos que estão sendo executados no momento.

pkill: Ele mata um processo.
Exemplo: pkill -f "photoshop"










